// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sma_services.Models;

namespace sma_services.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20210114041834_trans")]
    partial class trans
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("sma_services.Models.TickerTranSaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Ticker")
                        .IsUnique()
                        .HasFilter("[Ticker] IS NOT NULL");

                    b.ToTable("TickerTranSactions");
                });

            modelBuilder.Entity("sma_services.Models.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ItemSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TID")
                        .HasColumnType("int");

                    b.Property<int>("TickerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TickerID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("sma_services.Models.Transaction", b =>
                {
                    b.HasOne("sma_services.Models.TickerTranSaction", "TickerTranSaction")
                        .WithMany("Transactions")
                        .HasForeignKey("TickerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TickerTranSaction");
                });

            modelBuilder.Entity("sma_services.Models.TickerTranSaction", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
